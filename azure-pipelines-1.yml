# Maven package Java project Web App to Linux on Azure
# Build your Java project and deploy it to Azure as a Linux web app
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

variables:

  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: 'd6492675-dc06-49ca-a236-299a36dab5f4'

  # Web app name
  webAppName: 'my-java-app'

  # Environment name
  environmentName: 'my-java-app'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

  #debug context decorator
  system.debugContext: 'true'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: MavenPackageAndPublishArtifacts
    displayName: Maven Package and Publish Artifacts
    pool:
      vmImage: $(vmImageName)

    steps:
    - task: Maven@3
      displayName: 'Maven Package'
      inputs:
        mavenPomFile: 'pom.xml'

    - task: CopyFiles@2
      displayName: 'Copy Files to artifact staging directory'
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)'
        Contents: '**/target/*.?(war|jar)'
        TargetFolder: $(Build.ArtifactStagingDirectory)

    - upload: $(Build.ArtifactStagingDirectory)
      artifact: drop
    - task: Docker@2
      displayName: Login to ACR 
      inputs:
        containerRegistry: $(dockerRegistryServiceConnection)
        command: 'login'
        Dockerfile: '**/Dockerfile'
        
    - task: CmdLine@2
      displayName: Common cmd task for observation purposes
      inputs:
        script: |
          echo Write your commands here
            
          echo Hello world
    - task: VSTest@2
      inputs:
        testSelector: 'testAssemblies'
        testAssemblyVer2: |
          **\*test*.dll
          !**\*TestAdapter.dll
          !**\obj\**
        searchFolder: '$(System.DefaultWorkingDirectory)'
        codeCoverageEnabled: true

